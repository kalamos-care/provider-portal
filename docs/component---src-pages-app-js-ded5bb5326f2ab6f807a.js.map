{"version":3,"sources":["webpack:///./src/components/Notifications/notifications.module.css","webpack:///./node_modules/@material-ui/core/esm/styles/makeStyles.js","webpack:///./node_modules/@material-ui/core/esm/Link/Link.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack:///./node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","webpack:///./node_modules/memoize-one/dist/memoize-one.esm.js","webpack:///./node_modules/react-window/dist/index.esm.js","webpack:///./src/components/Patients/PatientList/index.js","webpack:///./src/components/Patients/index.js","webpack:///./src/components/AccountSettings/index.js","webpack:///./src/components/RegisterKit/index.js","webpack:///./node_modules/@material-ui/core/esm/Divider/Divider.js","webpack:///./node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","webpack:///./node_modules/@material-ui/core/esm/Avatar/Avatar.js","webpack:///./src/components/Messages/MessageList/index.js","webpack:///./src/components/Messages/index.js","webpack:///./src/components/Notifications/data/Deposits.js","webpack:///./node_modules/@material-ui/core/esm/Table/TableContext.js","webpack:///./node_modules/@material-ui/core/esm/Table/Table.js","webpack:///./node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","webpack:///./node_modules/@material-ui/core/esm/TableBody/TableBody.js","webpack:///./node_modules/@material-ui/core/esm/TableCell/TableCell.js","webpack:///./node_modules/@material-ui/core/esm/TableHead/TableHead.js","webpack:///./node_modules/@material-ui/core/esm/TableRow/TableRow.js","webpack:///./src/components/Notifications/data/OrderData.js","webpack:///./src/components/Notifications/index.js","webpack:///./src/pages/app.js"],"names":["module","exports","stylesOrCreator","options","arguments","length","undefined","defaultTheme","Link","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","root","concat","button","event","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","_objectDestructuringEmpty","obj","TypeError","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","ListContext","type","Typography","display","multiline","withStyles","flex","minWidth","marginTop","marginBottom","paddingLeft","areInputsEqual","newInputs","lastInputs","i","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","_i","this","apply","now","performance","Date","cancelTimeout","timeoutID","cancelAnimationFrame","id","requestTimeout","callback","delay","start","requestAnimationFrame","tick","call","cachedRTLResult","getRTLOffsetType","recalculate","outerDiv","document","createElement","outerStyle","style","width","height","overflow","direction","innerDiv","innerStyle","appendChild","body","scrollLeft","removeChild","defaultItemKey$1","index","data","createListComponent","_ref","_class","_temp","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_PureComponent","List","_this","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","state","instance","isScrolling","scrollDirection","scrollOffset","initialScrollOffset","scrollUpdateWasRequested","_callOnItemsRendered","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","_this$props","itemSize","layout","itemStyleCache","_getItemStyleCache","hasOwnProperty","_style","_offset","size","isHorizontal","top","_","__","___","_onScrollHorizontal","_event$currentTarget","currentTarget","clientWidth","scrollWidth","setState","prevState","Math","max","min","_resetIsScrollingDebounced","_onScrollVertical","_event$currentTarget2","clientHeight","scrollHeight","scrollTop","_outerRefSetter","outerRef","current","_resetIsScrolling","getDerivedStateFromProps","nextProps","validateSharedProps$1","_proto","prototype","scrollTo","scrollToItem","align","itemCount","componentDidMount","_this$props2","_callPropsCallbacks","componentDidUpdate","_this$props3","_this$state","componentWillUnmount","render","_this$props4","innerRef","innerElementType","innerTagName","itemData","_this$props4$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","_this$_getRangeToRend","_getRangeToRender","startIndex","stopIndex","items","_index","push","key","estimatedTotalSize","WebkitOverflowScrolling","willChange","pointerEvents","_this$_getRangeToRend2","_overscanStartIndex","_overscanStopIndex","_visibleStartIndex","_visibleStopIndex","_this$state2","_scrollDirection","_scrollOffset","_scrollUpdateWasRequested","_this$props5","overscanCount","_this$state3","overscanBackward","overscanForward","defaultProps","_ref2","_ref3","FixedSizeList","_ref4","lastItemOffset","maxOffset","minOffset","middleOffset","round","ceil","floor","_ref5","offset","_ref6","numVisibleItems","_ref7","renderRow","ListItem","VirtualizedList","Dashboard","getCurrentUser","container","Settings","legalName","email","RegisterKit","_props$absolute","absolute","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","vertical","theme","flexShrink","palette","divider","bottom","left","marginLeft","middle","spacing","marginRight","alignSelf","context","alignItems","alignItemsFlexStart","createSvgIcon","d","alt","childrenProp","imgProps","sizes","src","srcSet","loaded","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","justifyContent","fontFamily","typography","fontSize","pxToRem","lineHeight","background","default","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","useStyles","makeStyles","maxWidth","paper","inline","AlignItemsList","Fragment","Messages","preventDefault","Deposits","href","onClick","_props$padding","_props$size","_props$stickyHeader","stickyHeader","table","Provider","value","borderCollapse","borderSpacing","body2","text","captionSide","_props$align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","tablelvl2","isHeadCell","ariaSort","capitalize","borderBottom","head","fontWeight","fontWeightMedium","footer","sizeSmall","paddingRight","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","zIndex","_props$hover","hover","_props$selected","selected","action","main","selectedOpacity","createData","date","shipTo","paymentMethod","amount","rows","seeMore","Orders","map","row","item","xs","md","lg","Paper","styles","App","Layout","PrivateRoute","path","AccountSettings","Patients","Notifications","Login"],"mappings":"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","file":"component---src-pages-app-js-ded5bb5326f2ab6f807a.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"notifications-module--paper--1CpP0\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","function areInputsEqual(newInputs, lastInputs) {\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n\n  for (var i = 0; i < newInputs.length; i++) {\n    if (newInputs[i] !== lastInputs[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = areInputsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  function memoized() {\n    var newArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      newArgs[_i] = arguments[_i];\n    }\n\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  }\n\n  return memoized;\n}\n\nexport default memoizeOne;","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose'; // Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nvar now = hasNativePerformanceNow ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\n\nfunction cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nfunction requestTimeout(callback, delay) {\n  var start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  var timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}\n\nvar size = -1; // This utility copied from \"dom-helpers\" package.\n\nfunction getScrollbarSize(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (size === -1 || recalculate) {\n    var div = document.createElement('div');\n    var style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n    document.body.appendChild(div);\n    size = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n\n  return size;\n}\n\nvar cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nfunction getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (cachedRTLResult === null || recalculate) {\n    var outerDiv = document.createElement('div');\n    var outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    var innerDiv = document.createElement('div');\n    var innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nvar defaultItemKey = function defaultItemKey(_ref) {\n  var columnIndex = _ref.columnIndex,\n      data = _ref.data,\n      rowIndex = _ref.rowIndex;\n  return rowIndex + \":\" + columnIndex;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsOverscanCount = null;\nvar devWarningsOverscanRowsColumnsCount = null;\nvar devWarningsTagName = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = /*#__PURE__*/new WeakSet();\n    devWarningsOverscanRowsColumnsCount = /*#__PURE__*/new WeakSet();\n    devWarningsTagName = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createGridComponent(_ref2) {\n  var _class, _temp;\n\n  var getColumnOffset = _ref2.getColumnOffset,\n      getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,\n      getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,\n      getColumnWidth = _ref2.getColumnWidth,\n      getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,\n      getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,\n      getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,\n      getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,\n      getRowHeight = _ref2.getRowHeight,\n      getRowOffset = _ref2.getRowOffset,\n      getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,\n      getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,\n      initInstanceProps = _ref2.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref2.validateProps;\n  return _temp = _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(Grid, _PureComponent); // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n\n\n    function Grid(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_assertThisInitialized(_this)));\n      _this._resetIsScrollingTimeoutId = null;\n      _this._outerRef = void 0;\n      _this.state = {\n        instance: _assertThisInitialized(_assertThisInitialized(_this)),\n        isScrolling: false,\n        horizontalScrollDirection: 'forward',\n        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,\n        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,\n        scrollUpdateWasRequested: false,\n        verticalScrollDirection: 'forward'\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanColumnStartIndex: overscanColumnStartIndex,\n          overscanColumnStopIndex: overscanColumnStopIndex,\n          overscanRowStartIndex: overscanRowStartIndex,\n          overscanRowStopIndex: overscanRowStopIndex,\n          visibleColumnStartIndex: visibleColumnStartIndex,\n          visibleColumnStopIndex: visibleColumnStopIndex,\n          visibleRowStartIndex: visibleRowStartIndex,\n          visibleRowStopIndex: visibleRowStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          horizontalScrollDirection: horizontalScrollDirection,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          verticalScrollDirection: verticalScrollDirection,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (rowIndex, columnIndex) {\n        var _this$props = _this.props,\n            columnWidth = _this$props.columnWidth,\n            direction = _this$props.direction,\n            rowHeight = _this$props.rowHeight;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);\n\n        var key = rowIndex + \":\" + columnIndex;\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(key)) {\n          style = itemStyleCache[key];\n        } else {\n          var _style;\n\n          itemStyleCache[key] = style = (_style = {\n            position: 'absolute'\n          }, _style[direction === 'rtl' ? 'right' : 'left'] = getColumnOffset(_this.props, columnIndex, _this._instanceProps), _style.top = getRowOffset(_this.props, rowIndex, _this._instanceProps), _style.height = getRowHeight(_this.props, rowIndex, _this._instanceProps), _style.width = getColumnWidth(_this.props, columnIndex, _this._instanceProps), _style);\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScroll = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientHeight = _event$currentTarget.clientHeight,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollTop = _event$currentTarget.scrollTop,\n            scrollHeight = _event$currentTarget.scrollHeight,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n\n          var calculatedScrollLeft = scrollLeft;\n\n          if (direction === 'rtl') {\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                calculatedScrollLeft = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));\n          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n            scrollLeft: calculatedScrollLeft,\n            scrollTop: calculatedScrollTop,\n            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1);\n        });\n      };\n\n      return _this;\n    }\n\n    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = Grid.prototype;\n\n    _proto.scrollTo = function scrollTo(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(function (prevState) {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(_ref4) {\n      var _ref4$align = _ref4.align,\n          align = _ref4$align === void 0 ? 'auto' : _ref4$align,\n          columnIndex = _ref4.columnIndex,\n          rowIndex = _ref4.rowIndex;\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          height = _this$props2.height,\n          rowCount = _this$props2.rowCount,\n          width = _this$props2.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n      var scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n\n      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;\n      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;\n      this.scrollTo({\n        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,\n        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop\n      });\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          initialScrollLeft = _this$props3.initialScrollLeft,\n          initialScrollTop = _this$props3.initialScrollTop;\n\n      if (this._outerRef != null) {\n        var outerRef = this._outerRef;\n\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var direction = this.props.direction;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollTop = _this$state2.scrollTop,\n          scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        var outerRef = this._outerRef;\n\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n\n            default:\n              var clientWidth = outerRef.clientWidth,\n                  scrollWidth = outerRef.scrollWidth;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          columnCount = _this$props4.columnCount,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          rowCount = _this$props4.rowCount,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling;\n\n      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),\n          columnStartIndex = _this$_getHorizontalR[0],\n          columnStopIndex = _this$_getHorizontalR[1];\n\n      var _this$_getVerticalRan = this._getVerticalRangeToRender(),\n          rowStartIndex = _this$_getVerticalRan[0],\n          rowStopIndex = _this$_getVerticalRan[1];\n\n      var items = [];\n\n      if (columnCount > 0 && rowCount) {\n        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {\n          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {\n            items.push(createElement(children, {\n              columnIndex: _columnIndex,\n              data: itemData,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              key: itemKey({\n                columnIndex: _columnIndex,\n                data: itemData,\n                rowIndex: _rowIndex\n              }),\n              rowIndex: _rowIndex,\n              style: this._getItemStyle(_rowIndex, _columnIndex)\n            }));\n          }\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      var _this$props5 = this.props,\n          columnCount = _this$props5.columnCount,\n          onItemsRendered = _this$props5.onItemsRendered,\n          onScroll = _this$props5.onScroll,\n          rowCount = _this$props5.rowCount;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),\n              _overscanColumnStartIndex = _this$_getHorizontalR2[0],\n              _overscanColumnStopIndex = _this$_getHorizontalR2[1],\n              _visibleColumnStartIndex = _this$_getHorizontalR2[2],\n              _visibleColumnStopIndex = _this$_getHorizontalR2[3];\n\n          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),\n              _overscanRowStartIndex = _this$_getVerticalRan2[0],\n              _overscanRowStopIndex = _this$_getVerticalRan2[1],\n              _visibleRowStartIndex = _this$_getVerticalRan2[2],\n              _visibleRowStopIndex = _this$_getVerticalRan2[3];\n\n          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        var _this$state3 = this.state,\n            _horizontalScrollDirection = _this$state3.horizontalScrollDirection,\n            _scrollLeft = _this$state3.scrollLeft,\n            _scrollTop = _this$state3.scrollTop,\n            _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,\n            _verticalScrollDirection = _this$state3.verticalScrollDirection;\n\n        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);\n      }\n    }; // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n\n\n    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {\n      var _this$props6 = this.props,\n          columnCount = _this$props6.columnCount,\n          overscanColumnCount = _this$props6.overscanColumnCount,\n          overscanColumnsCount = _this$props6.overscanColumnsCount,\n          overscanCount = _this$props6.overscanCount,\n          rowCount = _this$props6.rowCount;\n      var _this$state4 = this.state,\n          horizontalScrollDirection = _this$state4.horizontalScrollDirection,\n          isScrolling = _this$state4.isScrolling,\n          scrollLeft = _this$state4.scrollLeft;\n      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);\n      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {\n      var _this$props7 = this.props,\n          columnCount = _this$props7.columnCount,\n          overscanCount = _this$props7.overscanCount,\n          overscanRowCount = _this$props7.overscanRowCount,\n          overscanRowsCount = _this$props7.overscanRowsCount,\n          rowCount = _this$props7.rowCount;\n      var _this$state5 = this.state,\n          isScrolling = _this$state5.isScrolling,\n          verticalScrollDirection = _this$state5.verticalScrollDirection,\n          scrollTop = _this$state5.scrollTop;\n      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);\n      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return Grid;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    useIsScrolling: false\n  }, _temp;\n}\n\nvar validateSharedProps = function validateSharedProps(_ref5, _ref6) {\n  var children = _ref5.children,\n      direction = _ref5.direction,\n      height = _ref5.height,\n      innerTagName = _ref5.innerTagName,\n      outerTagName = _ref5.outerTagName,\n      overscanColumnsCount = _ref5.overscanColumnsCount,\n      overscanCount = _ref5.overscanCount,\n      overscanRowsCount = _ref5.overscanRowsCount,\n      width = _ref5.width;\n  var instance = _ref6.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn('The overscanCount prop has been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (typeof overscanColumnsCount === 'number' || typeof overscanRowsCount === 'number') {\n      if (devWarningsOverscanRowsColumnsCount && !devWarningsOverscanRowsColumnsCount.has(instance)) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn('The overscanColumnsCount and overscanRowsCount props have been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    if (typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Grids must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    }\n\n    if (typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Grids must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\nvar getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {\n  var rowCount = _ref.rowCount;\n  var rowMetadataMap = _ref2.rowMetadataMap,\n      estimatedRowHeight = _ref2.estimatedRowHeight,\n      lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {\n  var columnCount = _ref3.columnCount;\n  var columnMetadataMap = _ref4.columnMetadataMap,\n      estimatedColumnWidth = _ref4.estimatedColumnWidth,\n      lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {\n  var itemMetadataMap, itemSize, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = props.columnWidth;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = props.rowHeight;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {\n  var itemMetadataMap, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {\n  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n  var size = itemType === 'column' ? props.width : props.height;\n  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n\n  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);\n  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n\n  }\n};\n\nvar VariableSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(props, index, instanceProps) {\n    return getItemMetadata('column', props, index, instanceProps).offset;\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {\n    return findNearestItem('column', props, instanceProps, scrollLeft);\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {\n    var columnCount = props.columnCount,\n        width = props.width;\n    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);\n    var maxOffset = scrollLeft + width;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  getColumnWidth: function getColumnWidth(props, index, instanceProps) {\n    return instanceProps.columnMetadataMap[index].size;\n  },\n  getEstimatedTotalHeight: getEstimatedTotalHeight,\n  getEstimatedTotalWidth: getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getRowOffset: function getRowOffset(props, index, instanceProps) {\n    return getItemMetadata('row', props, index, instanceProps).offset;\n  },\n  getRowHeight: function getRowHeight(props, index, instanceProps) {\n    return instanceProps.rowMetadataMap[index].size;\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {\n    return findNearestItem('row', props, instanceProps, scrollTop);\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {\n    var rowCount = props.rowCount,\n        height = props.height;\n    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);\n    var maxOffset = scrollTop + height;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref5 = props,\n        estimatedColumnWidth = _ref5.estimatedColumnWidth,\n        estimatedRowHeight = _ref5.estimatedRowHeight;\n    var instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {}\n    };\n\n    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        columnIndex: columnIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        rowIndex: rowIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterIndices = function (_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex,\n          _ref6$shouldForceUpda = _ref6.shouldForceUpdate,\n          shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;\n\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);\n      }\n\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);\n      } // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref7) {\n    var columnWidth = _ref7.columnWidth,\n        rowHeight = _ref7.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      } else if (typeof rowHeight !== 'function') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\nvar IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;\n\nvar defaultItemKey$1 = function defaultItemKey(index, data) {\n  return index;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsDirection = null;\nvar devWarningsTagName$1 = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = /*#__PURE__*/new WeakSet();\n    devWarningsTagName$1 = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createListComponent(_ref) {\n  var _class, _temp;\n\n  var getItemOffset = _ref.getItemOffset,\n      getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n      getItemSize = _ref.getItemSize,\n      getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,\n      getStartIndexForOffset = _ref.getStartIndexForOffset,\n      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n      initInstanceProps = _ref.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref.validateProps;\n  return _temp = _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(List, _PureComponent); // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n\n\n    function List(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_assertThisInitialized(_this)));\n      _this._outerRef = void 0;\n      _this._resetIsScrollingTimeoutId = null;\n      _this.state = {\n        instance: _assertThisInitialized(_assertThisInitialized(_this)),\n        isScrolling: false,\n        scrollDirection: 'forward',\n        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,\n        scrollUpdateWasRequested: false\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanStartIndex: overscanStartIndex,\n          overscanStopIndex: overscanStopIndex,\n          visibleStartIndex: visibleStartIndex,\n          visibleStopIndex: visibleStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          scrollDirection: scrollDirection,\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (index) {\n        var _this$props = _this.props,\n            direction = _this$props.direction,\n            itemSize = _this$props.itemSize,\n            layout = _this$props.layout;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);\n\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(index)) {\n          style = itemStyleCache[index];\n        } else {\n          var _style;\n\n          var _offset = getItemOffset(_this.props, index, _this._instanceProps);\n\n          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction \"horizontal\"\n\n          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n          itemStyleCache[index] = style = (_style = {\n            position: 'absolute'\n          }, _style[direction === 'rtl' ? 'right' : 'left'] = isHorizontal ? _offset : 0, _style.top = !isHorizontal ? _offset : 0, _style.height = !isHorizontal ? size : '100%', _style.width = isHorizontal ? size : '100%', _style);\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScrollHorizontal = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollLeft) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction;\n          var scrollOffset = scrollLeft;\n\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                scrollOffset = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._onScrollVertical = function (event) {\n        var _event$currentTarget2 = event.currentTarget,\n            clientHeight = _event$currentTarget2.clientHeight,\n            scrollHeight = _event$currentTarget2.scrollHeight,\n            scrollTop = _event$currentTarget2.scrollTop;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1, null);\n        });\n      };\n\n      return _this;\n    }\n\n    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps$1(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = List.prototype;\n\n    _proto.scrollTo = function scrollTo(scrollOffset) {\n      scrollOffset = Math.max(0, scrollOffset);\n      this.setState(function (prevState) {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n\n        return {\n          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(index, align) {\n      if (align === void 0) {\n        align = 'auto';\n      }\n\n      var itemCount = this.props.itemCount;\n      var scrollOffset = this.state.scrollOffset;\n      index = Math.max(0, Math.min(index, itemCount - 1));\n      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps));\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props2 = this.props,\n          direction = _this$props2.direction,\n          initialScrollOffset = _this$props2.initialScrollOffset,\n          layout = _this$props2.layout;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var _this$props3 = this.props,\n          direction = _this$props3.direction,\n          layout = _this$props3.layout;\n      var _this$state = this.state,\n          scrollOffset = _this$state.scrollOffset,\n          scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n\n              default:\n                var clientWidth = outerRef.clientWidth,\n                    scrollWidth = outerRef.scrollWidth;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemCount = _this$props4.itemCount,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey$1 : _this$props4$itemKey,\n          layout = _this$props4.layout,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling; // TODO Deprecate direction \"horizontal\"\n\n      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;\n\n      var _this$_getRangeToRend = this._getRangeToRender(),\n          startIndex = _this$_getRangeToRend[0],\n          stopIndex = _this$_getRangeToRend[1];\n\n      var items = [];\n\n      if (itemCount > 0) {\n        for (var _index = startIndex; _index <= stopIndex; _index++) {\n          items.push(createElement(children, {\n            data: itemData,\n            key: itemKey(_index, itemData),\n            index: _index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style: this._getItemStyle(_index)\n          }));\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: isHorizontal ? '100%' : estimatedTotalSize,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: isHorizontal ? estimatedTotalSize : '100%'\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        var itemCount = this.props.itemCount;\n\n        if (itemCount > 0) {\n          var _this$_getRangeToRend2 = this._getRangeToRender(),\n              _overscanStartIndex = _this$_getRangeToRend2[0],\n              _overscanStopIndex = _this$_getRangeToRend2[1],\n              _visibleStartIndex = _this$_getRangeToRend2[2],\n              _visibleStopIndex = _this$_getRangeToRend2[3];\n\n          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        var _this$state2 = this.state,\n            _scrollDirection = _this$state2.scrollDirection,\n            _scrollOffset = _this$state2.scrollOffset,\n            _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);\n      }\n    }; // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n\n\n    _proto._getRangeToRender = function _getRangeToRender() {\n      var _this$props5 = this.props,\n          itemCount = _this$props5.itemCount,\n          overscanCount = _this$props5.overscanCount;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollDirection = _this$state3.scrollDirection,\n          scrollOffset = _this$state3.scrollOffset;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);\n      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return List;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false\n  }, _temp;\n} // NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\n\nvar validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {\n  var children = _ref2.children,\n      direction = _ref2.direction,\n      height = _ref2.height,\n      layout = _ref2.layout,\n      innerTagName = _ref2.innerTagName,\n      outerTagName = _ref2.outerTagName,\n      width = _ref2.width;\n  var instance = _ref3.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {\n        devWarningsTagName$1.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    } // TODO Deprecate direction \"horizontal\"\n\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn('The direction prop should be either \"ltr\" (default) or \"rtl\". ' + 'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.');\n        }\n\n        break;\n\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"layout\" prop has been specified. ' + 'Value should be either \"horizontal\" or \"vertical\". ' + (\"\\\"\" + layout + \"\\\" was specified.\"));\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Horizontal lists must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Vertical lists must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;\n\nvar getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {\n  var _ref = props,\n      itemSize = _ref.itemSize;\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {\n  var itemCount = props.itemCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {\n  var itemCount = _ref2.itemCount;\n  var itemMetadataMap = _ref3.itemMetadataMap,\n      estimatedItemSize = _ref3.estimatedItemSize,\n      lastMeasuredIndex = _ref3.lastMeasuredIndex;\n  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nvar VariableSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(props, index, instanceProps) {\n    return getItemMetadata$1(props, index, instanceProps).offset;\n  },\n  getItemSize: function getItemSize(props, index, instanceProps) {\n    return instanceProps.itemMetadataMap[index].size;\n  },\n  getEstimatedTotalSize: getEstimatedTotalSize,\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n\n    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {\n    return findNearestItem$1(props, instanceProps, offset);\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        itemCount = props.itemCount,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);\n    var maxOffset = scrollOffset + size;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref4 = props,\n        estimatedItemSize = _ref4.estimatedItemSize;\n    var instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,\n      lastMeasuredIndex: -1\n    };\n\n    instance.resetAfterIndex = function (index, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref5) {\n    var itemSize = _ref5.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\nvar FixedSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(_ref, index) {\n    var columnWidth = _ref.columnWidth;\n    return index * columnWidth;\n  },\n  getColumnWidth: function getColumnWidth(_ref2, index) {\n    var columnWidth = _ref2.columnWidth;\n    return columnWidth;\n  },\n  getRowOffset: function getRowOffset(_ref3, index) {\n    var rowHeight = _ref3.rowHeight;\n    return index * rowHeight;\n  },\n  getRowHeight: function getRowHeight(_ref4, index) {\n    var rowHeight = _ref4.rowHeight;\n    return rowHeight;\n  },\n  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {\n    var rowCount = _ref5.rowCount,\n        rowHeight = _ref5.rowHeight;\n    return rowHeight * rowCount;\n  },\n  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {\n    var columnCount = _ref6.columnCount,\n        columnWidth = _ref6.columnWidth;\n    return columnWidth * columnCount;\n  },\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {\n    var columnCount = _ref7.columnCount,\n        columnWidth = _ref7.columnWidth,\n        width = _ref7.width;\n    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);\n    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);\n    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {\n    var rowHeight = _ref8.rowHeight,\n        height = _ref8.height,\n        rowCount = _ref8.rowCount;\n    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);\n    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);\n    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {\n    var columnWidth = _ref9.columnWidth,\n        columnCount = _ref9.columnCount;\n    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {\n    var columnWidth = _ref10.columnWidth,\n        columnCount = _ref10.columnCount,\n        width = _ref10.width;\n    var left = startIndex * columnWidth;\n    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);\n    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {\n    var rowHeight = _ref11.rowHeight,\n        rowCount = _ref11.rowCount;\n    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {\n    var rowHeight = _ref12.rowHeight,\n        rowCount = _ref12.rowCount,\n        height = _ref12.height;\n    var top = startIndex * rowHeight;\n    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);\n    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref13) {\n    var columnWidth = _ref13.columnWidth,\n        rowHeight = _ref13.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\nvar FixedSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(_ref, index) {\n    var itemSize = _ref.itemSize;\n    return index * itemSize;\n  },\n  getItemSize: function getItemSize(_ref2, index) {\n    var itemSize = _ref2.itemSize;\n    return itemSize;\n  },\n  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {\n    var itemCount = _ref3.itemCount,\n        itemSize = _ref3.itemSize;\n    return itemSize * itemCount;\n  },\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset) {\n    var direction = _ref4.direction,\n        height = _ref4.height,\n        itemCount = _ref4.itemCount,\n        itemSize = _ref4.itemSize,\n        layout = _ref4.layout,\n        width = _ref4.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var lastItemOffset = Math.max(0, itemCount * itemSize - size);\n    var maxOffset = Math.min(lastItemOffset, index * itemSize);\n    var minOffset = Math.max(0, index * itemSize - size + itemSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        {\n          // \"Centered\" offset is usually the average of the min and max.\n          // But near the edges of the list, this doesn't hold true.\n          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n          if (middleOffset < Math.ceil(size / 2)) {\n            return 0; // near the beginning\n          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n            return lastItemOffset; // near the end\n          } else {\n            return middleOffset;\n          }\n        }\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {\n    var itemCount = _ref5.itemCount,\n        itemSize = _ref5.itemSize;\n    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {\n    var direction = _ref6.direction,\n        height = _ref6.height,\n        itemCount = _ref6.itemCount,\n        itemSize = _ref6.itemSize,\n        layout = _ref6.layout,\n        width = _ref6.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var offset = startIndex * itemSize;\n    var size = isHorizontal ? width : height;\n    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref7) {\n    var itemSize = _ref7.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n}); // Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\n\nfunction shallowDiffers(prev, next) {\n  for (var attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n\n  for (var _attribute in next) {\n    if (prev[_attribute] !== next[_attribute]) {\n      return true;\n    }\n  }\n\n  return false;\n} // It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\n\n\nfunction areEqual(prevProps, nextProps) {\n  var prevStyle = prevProps.style,\n      prevRest = _objectWithoutPropertiesLoose(prevProps, [\"style\"]);\n\n  var nextStyle = nextProps.style,\n      nextRest = _objectWithoutPropertiesLoose(nextProps, [\"style\"]);\n\n  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);\n} // It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\n\n\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState);\n}\n\nexport { VariableSizeGrid, VariableSizeList, FixedSizeGrid, FixedSizeList, areEqual, shouldComponentUpdate };","// rewrite this\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List'\nimport { FixedSizeList } from 'react-window';\n// random imports\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nfunction renderRow(props) {\n    const { index, style } = props;\n\n    return (\n        <ListItem button style={style} key={index}>\n            <ListItemText primary={`Patient ${index + 1}`} />\n        </ListItem>\n    );\n}\n\nrenderRow.propTypes = {\n    index: PropTypes.number.isRequired,\n    style: PropTypes.object.isRequired,\n};\n\nexport default function VirtualizedList() {\n    return (\n        <div>\n            {/*\n            <Paper component=\"form\">\n                <IconButton aria-label=\"menu\">\n                    <MenuIcon />\n                </IconButton>\n                <InputBase\n                    placeholder=\"Search Google Maps\"\n                    inputProps={{ 'aria-label': 'search google maps' }}\n                />\n                <IconButton type=\"submit\" aria-label=\"search\">\n                    <SearchIcon />\n                </IconButton>\n            </Paper>\n            */}\n            <FixedSizeList height={600} width={300} itemSize={46} itemCount={200}>\n                {renderRow}\n            </FixedSizeList>\n        </div>\n    );\n}","import React from \"react\"\nimport styles from \"./patients.module.css\"\nimport { getCurrentUser } from \"../../utils/auth\"\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport PatientList from './PatientList'\n\nconst Dashboard = () => {\n    const { } = getCurrentUser()\n\n    return (\n        <section>\n            <Typography component=\"h1\" variant=\"h5\">\n        Patients\n      </Typography>\n      <Grid container>\n          <PatientList />\n      </Grid>\n        </section>\n    )\n}\n\nexport default Dashboard","import React from \"react\"\nimport styles from \"./account-settings.module.css\"\nimport { getCurrentUser } from \"../../utils/auth\"\n\nconst Settings = () => {\n  const { name, legalName, email } = getCurrentUser()\n\n  return (\n    <section>\n      <p>\n        This is a client-only route. You can get additional information about a\n        user on the client from this page.\n      </p>\n      <ul>\n        <li>Preferred name: {name}</li>\n        <li>Legal name: {legalName}</li>\n        <li>Email address: {email}</li>\n      </ul>\n    </section>\n  )\n}\n\nexport default Settings","import React from \"react\"\nimport styles from \"./register-kit.module.css\"\nimport { getCurrentUser } from \"../../utils/auth\"\n\nconst RegisterKit = () => {\n    //pre-fill registration fields\n    const { } = getCurrentUser()\n\n    return (\n        <section>\n            <p>This would move to the patient app</p>\n            <h1>Insert Registration Form</h1>\n        </section>\n    )\n}\n\nexport default RegisterKit","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","//rework\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n}));\n\nexport default function AlignItemsList() {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root}>\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"Brunch this weekend?\"\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                Ali Connors\n              </Typography>\n              {\" — I'll be in your neighborhood doing errands this…\"}\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"Summer BBQ\"\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                to Scott, Alex, Jennifer\n              </Typography>\n              {\" — Wish I could come, but I'm out of town this…\"}\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"Oui Oui\"\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                Sandra Adams\n              </Typography>\n              {' — Do you have Paris recommendations? Have you ever…'}\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n    </List>\n  );\n}","import React from \"react\"\nimport styles from \"./messages.module.css\"\nimport { getCurrentUser } from \"../../utils/auth\"\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport MessageList from './MessageList';\n\nconst Messages = () => {\n    \n    return (\n        <section>\n            <Typography component=\"h1\" variant=\"h5\">\n                Messages\n            </Typography>\n            <Grid container>\n                <MessageList />\n            </Grid>\n        </section>\n    )\n}\n\nexport default Messages","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nfunction preventDefault(event) {\n    event.preventDefault();\n}\n\nexport default function Deposits() {\n    return (\n        <React.Fragment>\n      <Typography component=\"h1\" variant=\"h6\">Recent Deposits</Typography>\n            <Typography component=\"p\" variant=\"h4\">\n                $3,024.00\n      </Typography>\n            <Typography color=\"textSecondary\">\n                on 15 March, 2019\n      </Typography>\n            <div>\n                <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n                    View balance\n        </Link>\n            </div>\n        </React.Fragment>\n    );\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","// this is providing order data to the dashboard\n\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\n\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Janet Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Typography>Recent Orders</Typography>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from \"react\"\nimport styles from \"./notifications.module.css\"\nimport { getCurrentUser } from \"../../utils/auth\"\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Deposits from './data/Deposits';\nimport OrderData from './data/OrderData';\n\nconst Messages = () => {\n    \n    return (\n        <section>\n            <Typography component=\"h1\" variant=\"h5\">\n                Notifications\n            </Typography>\n            <Grid container spacing={3}>\n                {/* Recent Deposits */}\n                <Grid item xs={12} md={4} lg={3}>\n                    <Paper className={styles.paper}>\n                        <Deposits />\n                    </Paper>\n                </Grid>\n                {/* Recent Orders */}\n                <Grid item xs={12}>\n                    <Paper className={styles.paper}>\n                        <OrderData />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </section>\n    )\n}\n\nexport default Messages","import React from \"react\"\nimport { Router } from \"@reach/router\"\nimport Layout from \"../components/Layout\"\nimport Patients from \"../components/Patients\"\nimport AccountSettings from \"../components/AccountSettings\"\nimport RegisterKit from \"../components/RegisterKit\"\nimport Messages from \"../components/Messages\"\nimport Notifications from \"../components/Notifications\"\nimport Login from \"../components/Login\"\nimport PrivateRoute from \"../components/PrivateRoute\"\n\n// probably need to set the state\n\nconst App = () => (\n  <Layout>\n    <Router>\n      <PrivateRoute path=\"/app/settings\" component={AccountSettings} />\n      <PrivateRoute path=\"/app/patients\" component={Patients} />\n      <PrivateRoute path=\"/app/notifications\" component={Notifications} />\n      <PrivateRoute path=\"/app/register-kit\" component={RegisterKit} />\n      <PrivateRoute path=\"/app/messages\" component={Messages} />\n      <Login path=\"/app/login\" />\n    </Router>\n  </Layout>\n)\n\nexport default App"],"sourceRoot":""}